name: Build and test

on: [push]

jobs:
  build:
    name: Build and test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2016, macOS-latest]
    steps:
      - name: Enable symlinks
        run: git config --global core.symlinks true

      - name: Checkout the repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: true

      - name: install node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.37.0"

      - name: install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: install python
        uses: actions/setup-python@v1
        with:
          python-version: "2.7.16"
          architecture: x64

      - name: set up environment (common)
        run: |
          echo ::set-env name=RUSTC_WRAPPER::sccache
          echo ::set-env name=DENO_BUILD_MODE::release

      - name: set up environment (linux)
        if: startsWith(matrix.os, 'linux')
        run: |
          echo ::add-path::`pwd`/prebuilt/linux64

      - name: set up environment (mac)
        if: startsWith(matrix.os, 'macOS')
        run: |
          echo ::add-path::`pwd`/prebuilt/mac

      - name: set up environment (windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          echo ::add-path::%cd%\prebuilt\win

      - name: print versions
        run: |
          node -v
          python --version
          rustc --version
          cargo --version

      - name: print env
        run: |
          env

      - name: tools/setup.py
        #env:
        #  GYP_MSVS_OVERRIDE_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise
        run: python ./tools/setup.py

      - name: Start sccache
        env:
          AWS_ACCESS_KEY_ID: AKIAIVRN52PLDBP55LBQ
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SCCACHE_BUCKET: deno-sccache
        run: sccache --start-server

      - name: tools/lint.py
        run: python ./tools/lint.py

      - name: tools/test_format.py
        run: python ./tools/test_format.py

      - name: cargo build
        run: cargo build -vv --release --locked --all-targets

      - name: test
        run: python ./tools/test.py

      - name: clippy
        run: cargo clippy --all-targets --release --locked -- -D clippy::all
