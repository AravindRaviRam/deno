name: Build and test

on: [push]

jobs:
  build:
    name: Build and test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2016, macOS-latest]
    steps:
      - name: Enable symlinks
        run: git config --global core.symlinks true

      - name: Checkout the repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: true

      - name: install node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.37.0"

      - name: install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: install python
        uses: actions/setup-python@v1
        with:
          python-version: "2.7.16"
          architecture: x64

      - name: Setup python package dir
        if: startsWith(matrix.os, 'windows')
        run: setx PYTHONPATH "third_party\python_packages" /m

      - name: print versions
        run: |
          node -v
          python --version
          rustc --version
          cargo --version

      - name: tools/setup.py
        env:
          GYP_MSVS_OVERRIDE_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise
        run: python ./tools/setup.py

      - name: Start sccache (linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: "`pwd`/prebuilt/linux64/sccache --start-server"
      - name: Start sccache (macos)
        if: startsWith(matrix.os, 'macos')
        run: "`pwd`/prebuilt/mac/sccache --start-server"
      - name: Start sccache (windows)
        if: startsWith(matrix.os, 'windows')
        run: "%cd%\\prebuilt\\win\\sccache.exe --start-server"

      - name: tools/lint.py
        run: python ./tools/lint.py

      - name: tools/test_format.py
        run: python ./tools/test_format.py

      - name: cargo build
        env:
          DENO_BUILD_MODE: release
          GYP_MSVS_OVERRIDE_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise
        run: |
          cargo build --release --locked --all-targets

      - name: clippy
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: test
        env:
          GYP_MSVS_OVERRIDE_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise
          DENO_BUILD_MODE: release
        run: python ./tools/test.py

      # Upload artifacts
      - name: Upload artifacts (unix)
        uses: actions/upload-artifact@master
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        with:
          name: deno_${{matrix.os}}
          path: target/release/deno
      - name: Upload artifacts (windows)
        uses: actions/upload-artifact@master
        if: startsWith(matrix.os, 'windows')
        with:
          name: deno_${{matrix.os}}.exe
          path: target\release\deno.exe

